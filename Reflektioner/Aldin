09-06:

Vi kom fram till att vi skulle använda oss av vs code, node.js och react för frontend.

09-13:

We assigned roles to each member in the team
Aldin: backend
Rasmus: backend
Adam: backend
Noah: frontend
Daniel: frontend

Updated node to latest version.

I created a simple server using node and express.


Merge between server and main branch.

09/26:

Since I last wrote in this diary we decided as a team to not use react and just use standard JavaScript and HTML, since react did not seem appropriate for this assignment, since we are not supposed to make a fancy program with a lot of bells and whistles.

10/11:

I had a problem with docker. Docker couldn't find the correct directory to frontend_objects.html. I tried to copy over the file into docker in the dockerfile. That did not work, Daniel told me to just move the html file into the backend folder so that is what I did. And now at least the program works and we can get some work done.

I got a merge conflict when trying to merge with main, the problem was that I had removed a file in my branch that someone else had merged with main. To solve this I accepted the changes of the file in my branch so as not to disrupt someone else's work. The file that was causing the merge conflict was cheeseburger.html.

10/14:
I can't get javascript file to work, because of X-Content-Type-Options: nosniff. I have no clue what this is. Pls god help me.
After a long conversation with chatGPT, I managed to find that the problem was that in the response header the file had content-type: HTML. This meant that the server couldn't find the javascriptfile, and to solve this I had to specify the <script> tag to start with a "/". And to add app.use(express.static(path.join(__dirname))); this line of code to the server.js file. https://expressjs.com/en/starter/static-files.html

I made it so the items page dynamically adds buttons, I'm just waiting on the database. When the buttons are clicked the ingredients of the burger is displayed. Next I'm going to add a button for each item that adds the item to the checkout, and in the checkout page we are planning to add the functionality to remove or add ingredients to the items.

10/15:
I have realized that I do not enjoy coding in javascript. The reason why is really just small things like semicolons being optional. Oh and I also realized that for some reason I had the dates all mixed up in this dairy.

10/16:
I need to figure out ways to send the order array from Frontend_operation.js to checkout.js. So I searched the internet for ways to approach this. And I found out from stackoverflow that a common solution is to send the data in the URL with URL parameters. I tried to solve it this way but I didn't understand what I was doing, so I decided to not send data from one JavaScript file to another and just use the same file for both pages.

10/17:
My solution for sending information from one page to another didn't work so we decided to use a solution Adam came up with.

When I first made the script in frontend_operations I forgot that it should fetch data from the server, since the server will be communicating with the database. The frontend shouldn't do that. I fixed it by adding the temp const array to the server and fetching it from frontend_operations when the page loads in. There was a problem that occurred when I tried the new version of the frontend. the problem was that the burger array was not defined this occurred do to the html page calling the onStart method before the fetch could update the burgers array.

I will now try to use similar logic for the checkout page to create a list of the ingredients and add the functionality of modifying the ingredients before sending to kitchenview.

10/18:

The database is still not implemented but my latest changes have been focused on making it easy to implement a database. Like my last change in the items page and now in the checkout page. Im making everything fetch data from the server so that when the database is implemented only the server need to communicate with it. I have learned a bit about using api request in node and it's fun when you understand a bit, however I still don't like javascript >:(


